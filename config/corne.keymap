#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // |  ALT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | GUI  |
            //                    | CTRL| SPC | LWR |   | RSE | ENT  | GUI |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T    &kp Y  &kp U    &kp I      &kp O    &kp P     &kp BSPC
&kp LALT   &kp A  &kp S  &kp D      &kp F      &kp G    &kp H  &kp J    &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B    &kp N  &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp RGUI
                         &kp LCTRL  &kp SPACE  &mo 3    &mo 4  &kp RET  &kp RGUI
            >;
        };

        gaming_layer {
            bindings = <
&kp ESCAPE  &kp TAB         &kp Q  &kp W         &kp E      &kp R    &trans  &trans     &trans         &trans  &trans  &trans
&kp CAPS    &kp LEFT_SHIFT  &kp A  &kp S         &kp D      &kp F    &trans  &trans     &trans         &trans  &trans  &trans
&kp LCTRL   &kp LCTRL       &kp Z  &kp X         &kp C      &kp V    &trans  &trans     &trans         &trans  &trans  &trans
                                   &kp LEFT_ALT  &kp SPACE  &mo 2    &mo 4   &kp ENTER  &kp RIGHT_GUI
            >;
        };

        gaming_alt_layer {
            bindings = <
&none  &none  &kp N1  &kp N2  &kp NUMBER_3  &none     &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &kp N4  &kp N5  &kp N6        &none     &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &kp N7  &kp N8  &kp N9        &none     &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &trans        &trans    &trans  &trans  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
            // | CAPS |  1  |  2  |  3  |  4  |  5  |   |  -  |  =  |  `  |  {  |  }  | "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |  0  |   |  _  |  +  |  ~  |  [  |  ]  |  \   |
            //                    | CTRL| SPC |     |   |     | ENT | GUI |

            bindings = <
&kp ESC    &kp EXCL  &kp AT  &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
&kp CAPS   &kp N1    &kp N2  &kp N3     &kp N4     &kp N5       &kp MINUS  &kp EQUAL  &kp GRAVE  &kp LBRC  &kp RBRC  &kp PIPE
&kp LSHFT  &kp N6    &kp N7  &kp N8     &kp N9     &kp N0       &kp UNDER  &kp PLUS   &kp TILDE  &kp LBKT  &kp RBKT  &kp BSLH
                             &kp LCTRL  &kp SPACE  &trans       &trans     &kp RET    &kp RGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | HOME |  UP | END  |    |      |
            // |      | F1  | F2  | F3  | F4  | F5  |   |     | LFT |  DWN | RGT  |     |      |
            // | SHFT | F6  | F7  | F8  | F9  | F10 |   |     |      |      |     |     |      |
            //                    |     |     |     |   |     |      |      |

            bindings = <
&none      &none   &none   &none   &none   &none      &kp PAGE_UP        &kp HOME    &kp UP            &kp END     &kp PAGE_UP      &trans
&none      &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp PAGE_DOWN      &kp LEFT    &kp DOWN          &kp RIGHT   &kp PAGE_DOWN    &trans
&kp LSHFT  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &kp C_VOLUME_DOWN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP  &trans
                           &trans  &trans  &trans     &trans             &trans      &trans
            >;
        };

        tri_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &tog 1
&trans      &trans        &trans        &trans        &trans        &tog 1          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };

        tri_layer_gaming {
            if-layers = <2 4>;
            then-layer = <5>;
        };
    };
};
