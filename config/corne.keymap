#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        caps_macro: caps_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CAPS>, <&macro_tap_time 200>;

            label = "CAPS_MACRO";
        };
    };

    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_CAPS";
            bindings = <&kp>, <&caps_macro>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tpref: tpref {
            compatible = "zmk,behavior-hold-tap";
            label = "hold_tap_preferred";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB              &kp Q  &kp W  &kp E      &kp R              &kp T    &kp Y  &kp U                &kp I          &kp O    &kp P     &kp BSPC
&kp LALT             &kp A  &kp S  &kp D      &kp F              &kp G    &kp H  &kp J                &kp K          &kp L    &kp SEMI  &kp SQT
&shift_caps LSHFT 0  &kp Z  &kp X  &kp C      &kp V              &kp B    &kp N  &kp M                &kp COMMA      &kp DOT  &kp FSLH  &kp RGUI
                                   &kp LCTRL  &tpref LGUI SPACE  &mo 3    &mo 4  &mt RIGHT_SHIFT RET  &kp BACKSPACE
            >;
        };

        gaming_layer {
            bindings = <
&kp ESCAPE  &kp TAB         &kp Q  &kp W         &kp E      &kp R    &trans  &trans     &trans         &trans  &trans  &trans
&kp CAPS    &kp LEFT_SHIFT  &kp A  &kp S         &kp D      &kp F    &trans  &trans     &trans         &trans  &trans  &trans
&kp LCTRL   &kp LCTRL       &kp Z  &kp X         &kp C      &kp V    &trans  &trans     &trans         &trans  &trans  &trans
                                   &kp LEFT_ALT  &kp SPACE  &mo 2    &mo 4   &kp ENTER  &kp RIGHT_GUI
            >;
        };

        gaming_alt_layer {
            bindings = <
&none  &none  &kp N1  &kp N2  &kp N3  &none     &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &kp N4  &kp N5  &kp N6  &none     &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &kp N7  &kp N8  &kp N9  &none     &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        lower_layer {
            bindings = <
&kp ESC       &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
&kp LEFT_ALT  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp MINUS  &kp EQUAL  &kp GRAVE  &kp LBRC  &kp RBRC  &kp PIPE
&kp CAPS      &kp N6    &kp N7  &kp N8    &kp N9    &kp N0       &kp UNDER  &kp PLUS   &kp TILDE  &kp LBKT  &kp RBKT  &kp BSLH
                                &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&none  &none  &none     &kp PAGE_UP    &none    &none     &kp PAGE_UP        &kp HOME    &kp UP            &kp END     &kp PAGE_UP      &trans
&none  &none  &kp HOME  &kp PAGE_DOWN  &kp END  &none     &kp PAGE_DOWN      &kp LEFT    &kp DOWN          &kp RIGHT   &kp PAGE_DOWN    &trans
&none  &none  &none     &none          &none    &none     &kp C_VOLUME_DOWN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP  &trans
                        &trans         &trans   &trans    &trans             &trans      &trans
            >;
        };

        tri_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &tog 1
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &kp F6        &kp F7        &kp F8        &kp F9        &kp F10         &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };

        tri_layer_gaming {
            if-layers = <2 4>;
            then-layer = <5>;
        };
    };
};
